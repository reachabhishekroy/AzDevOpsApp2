{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "tagValues": {
            "type": "object",
            "defaultValue": {
              "CostCenter": ""
            },
            "metadata": {
              "description": "Optional. Common tags that will be applied to resources in this module."
            }
          },
        "virtualMachineName": {
            "type": "string",
            "minLength": 1,
            "maxLength": 13,
            "metadata": {
                "description": "Required. Name for the VMs"
            }
        },
        "virtualMachineSize": {
            "type": "string",
            "defaultValue": "Standard_DS2_v2",
            "metadata": {
                "description": "Optional. Size of the VMs"
            }
        },
        "virtualMachineOSImage": {
            "type": "string",
            "defaultValue": "2019-Datacenter",
            "metadata": {
                "description": "Required. OS image used for the VMs"
            }
        },
        "virtualMachineOSType": {
            "type": "string",
            "defaultValue": "Windows",
            "metadata": {
                "description": "Required. OS type used for the VMs"
            }
        },
        "virtualMachineCount": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "Optional. Number of VMs to create"
            }
        },
        "virtualMachineOffset": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "Optional. This value will be used as start VM count. Specify a value if you want to create VMs starting at a specific number, this is useful when you want to append more VMs."
            }
        },
        "virtualMachineDataDisks": {
            "type": "array",
            "defaultValue": [],
            "metadata": {
                "description": "Optional. Array of objects with the following expected format: [{ 'size': 120 }, { 'size': 130 }], this array indicates that two data disks will be created."
            }
        },
        "availabilitySetId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. Availability Set resource identifier, if a value is passed, the VMs will be associated to this Availability Set."
            }
        },
        "customData": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. Custom data associated to the VM, this value will be automatically converted into base64 to account for the expected VM format."
            }
        },
        "diagnosticStorageAccountName": {
            "type": "string",
            "metadata": {
                "description": "Required. Storage account used to store diagnostic information"
            }
        },
        "vmIPAddress": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. IP address used as initial IP address. If left empty, the VM will use the next available IP"
            }
        },
        "vNetName": {
            "type": "string",
            "metadata": {
                "description": "Required. Shared services Virtual Network resource name"
            }
        },
        "subNetName": {
            "type": "string",
            "metadata": {
                "description": "Required. Name of Shared Services Subnet, this name is used to get the SubnetId"
            }
        },
        "loadBalancerBackendPoolId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. Represents a Load Balancer backend pool resource identifier, if left blank, no Load Balancer will be associated to the VMSS"
            }
        },
        "applicationSecurityGroupId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. Application Security Group to associate to the Network Interface. If left empty, the Network Interface would not be associated to any Application Security Group."
            }
        },
        "adminUsername": {
            "type": "securestring",
            "metadata": {
                "description": "Required. Administrator username"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Required. Administrator password."
            }
        },
        "proximityPlacementGroupsId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. If passed, the VM will be assigned to a Proximity Placement Groups."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Optional. Location for all resources."
            }
        },
        "keyEncryptionKeyURL": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. URL of the KeyEncryptionKey used to encrypt the volume encryption key"
            }
        },
        "keyVaultResourceGroup": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Required. The Resource Group of the KeyVault."
            }
        },
        "keyVaultName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Required. The Name of the KeyVault."
            }
        },
        "volumeType": {
            "type": "string",
            "defaultValue": "All",
            "metadata": {
                "description": "Type of the volume OS or Data to perform encryption operation"
            }
        },
        "forceUpdateTag": {
            "type": "string",
            "defaultValue": "1.0",
            "metadata": {
                "description": "Pass in a unique value like a GUID everytime the operation needs to be force run."
            }
        },
        "resizeOSDisk": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Optional. Should the OS partition be resized to occupy full OS VHD before splitting system volume."
            }
        }
    },
    "variables": {
        "uniqueString": "[uniqueString(subscription().id, resourceGroup().id, concat(parameters('virtualMachineName'), '-vm'))]",
        "availabilitySetName": "[concat(parameters('virtualMachineName'), '-availability-set')]",
        "applicationSecurityGroups": [
            {
                "id": "[parameters('applicationSecurityGroupId')]"
            }
        ],
        "availabilitySet": {
            "id": "[if(not(empty(parameters('availabilitySetId'))), parameters('availabilitySetId'), resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName')))]"
        },
        "proximityPlacementGroup": {
            "id": "[parameters('proximityPlacementGroupsId')]"
        },
        "loadBalancerBackendPoolId": [
            {
                "id": "[parameters('loadBalancerBackendPoolId')]"
            }
        ],
        "subnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vNetName'), parameters('subNetName'))]",
        "antimalwareExtensionName": "IaaSAntimalware",
        "networkWatcherExtensionName": "NetworkWatcher",
        "tagPatching": "3rdSat7pm",
        "subscriptionID": "[subscription().id]",
        "extensionNameAzureDiskEncryption": "AzureDiskEncryption",
        "extensionVersionAzureDiskEncryption": "2.2",
        "encryptionOperation": "EnableEncryption",
        "keyEncryptionAlgorithm": "RSA-OAEP",
        "vmNames": {
            "copy": [
                {
                    "name": "vmNames",
                    "count": "[parameters('virtualMachineCount')]",
                    "input": "[concat(parameters('virtualMachineName'), copyIndex('vmNames', parameters('virtualMachineOffset')))]"
                }
            ]
        },
        "vmResourceIds": {
            "copy": [
                {
                    "name": "vmResourceIds",
                    "count": "[parameters('virtualMachineCount')]",
                    "input": "[resourceId('Microsoft.Compute/virtualMachines', concat(parameters('virtualMachineName'), copyIndex('vmResourceIds', parameters('virtualMachineOffset'))))]"
                }
            ]
        }
    },
    "resources": [
        {
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2016-04-30-preview",
            "location": "[parameters('location')]",
            "name": "[variables('availabilitySetName')]",
            "properties": {
                "platformFaultDomainCount": 2,
                "platformUpdateDomainCount": 5,
                "managed": true
            },
            "sku": {
                "name": "Aligned"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2017-09-01",
            "location": "[parameters('location')]",
            "tags": "[parameters('tagValues')]",
            "copy": {
                "name": "nicLoop",
                "count": "[parameters('virtualMachineCount')]"
            },
            "name": "[concat(parameters('virtualMachineName'), copyIndex(parameters('virtualMachineOffset')), '-nic')]",
            "properties": {
                "enableIPForwarding": true,
                "enableAcceleratedNetworking": true,
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "[if(empty(parameters('vmIPAddress')), 'Dynamic', 'Static')]",
                            "privateIPAddress": "[if(empty(parameters('vmIPAddress')), json('null'), vdc.nextIP(parameters('vmIPAddress'), copyIndex()))]",
                            "subnet": {
                                "id": "[variables('subnetId')]"
                            },
                            "loadBalancerBackendAddressPools": "[if(empty(parameters('loadBalancerBackendPoolId')), json('null'), variables('loadBalancerBackendPoolId'))]",
                            "applicationSecurityGroups": "[if(empty(parameters('applicationSecurityGroupId')), json('null'), variables('applicationSecurityGroups'))]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-03-01",
            "location": "[parameters('location')]",
            "tags": "[parameters('tagValues')]",
            "name": "[concat(parameters('virtualMachineName'), copyIndex(parameters('virtualMachineOffset')))]",
            "copy": {
                "name": "vmLoop",
                "count": "[parameters('virtualMachineCount')]"
            },
            "dependsOn": [
                "[variables('availabilitySetName')]"
            ],
            "properties": {
                "availabilitySet": "[variables('availabilitySet')]",
                "proximityPlacementGroup": "[if(empty(parameters('proximityPlacementGroupsId')), json('null'), variables('proximityPlacementGroup'))]",
                "osProfile": {
                    "computerName": "[concat(parameters('virtualMachineName'), copyIndex(parameters('virtualMachineOffset')))]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[if(equals(parameters('virtualMachineOSType'), 'Linux'), json('null'), parameters('adminPassword'))]",
                    "customData": "[if(empty(parameters('customData')), json('null'), base64(parameters('customData')))]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "[parameters('virtualMachineOSImage')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    },
                    "copy": [
                        {
                            "name": "dataDisks",
                            "count": "[length(parameters('virtualMachineDataDisks'))]",
                            "input": {
                                "lun": "[copyIndex('dataDisks')]",
                                "name": "[replace(toLower(substring(concat(parameters('virtualMachineName'), copyIndex('vmLoop', parameters('virtualMachineOffset')), '-dsk', copyindex('dataDisks', parameters('virtualMachineOffset')), '-', replace(concat(variables('uniqueString'), variables('uniqueString')), '-', '')), 0, 30)), '-', '')]",
                                "diskSizeGB": "[parameters('virtualMachineDataDisks')[copyIndex('dataDisks')].size]",
                                "createOption": "Empty",
                                "caching": "None",
                                "managedDisk": {
                                    "storageAccountType": "Premium_LRS"
                                }
                            }
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('virtualMachineName'), copyIndex(parameters('virtualMachineOffset')), '-nic'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https://', parameters('diagnosticStorageAccountName'), '.blob.core.windows.net/')]"
                    }
                }
            },
            "resources": [
                {
                    "type": "extensions",
                    "name": "[variables('antimalwareExtensionName')]",
                    "apiVersion": "2018-06-01",
                    "location": "[parameters('location')]",
                    "condition": "[equals(parameters('virtualMachineOSType'), 'Windows')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(parameters('virtualMachineName'), copyIndex(parameters('virtualMachineOffset'))))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.Security",
                        "type": "IaaSAntimalware",
                        "typeHandlerVersion": "1.5",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "AntimalwareEnabled": true,
                            "RealtimeProtectionEnabled": "true",
                            "Exclusions": {
                                "Extensions": "",
                                "Paths": "",
                                "Processes": ""
                            },
                            "ScheduledScanSettings": {
                                "isEnabled": "true",
                                "scanType": "Quick",
                                "day": "7",
                                "time": "120"
                            }
                        }
                    }
                },
                {
                    "type": "extensions",
                    "name": "[variables('networkWatcherExtensionName')]",
                    "apiVersion": "2018-06-01",
                    "location": "[parameters('location')]",
                    "condition": "[equals(parameters('virtualMachineOSType'), 'Windows')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(parameters('virtualMachineName'), copyIndex(parameters('virtualMachineOffset'))))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.NetworkWatcher",
                        "type": "NetworkWatcherAgentWindows",
                        "typeHandlerVersion": "1.4",
                        "autoUpgradeMinorVersion": true
                    }
                },
                {
                    "type": "extensions",
                    "name": "AzurePolicyforWindows",
                    "apiVersion": "2018-06-01",
                    "location": "[parameters('location')]",
                    "condition": "[equals(parameters('virtualMachineOSType'), 'Windows')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(parameters('virtualMachineName'), copyIndex(parameters('virtualMachineOffset'))))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.GuestConfiguration",
                        "type": "ConfigurationforWindows",
                        "typeHandlerVersion": "1.1",
                        "autoUpgradeMinorVersion": true,
                        "settings": {},
                        "protectedSettings": {}
                    }
                },
                {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "[concat(parameters('virtualMachineName'), copyIndex(parameters('virtualMachineOffset')), '/', variables('extensionNameAzureDiskEncryption'))]",
                    "location": "[parameters('location')]",
                    "apiVersion": "2017-03-30",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(parameters('virtualMachineName'), copyIndex(parameters('virtualMachineOffset'))))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.Security",
                        "type": "[variables('extensionNameAzureDiskEncryption')]",
                        "typeHandlerVersion": "[variables('extensionVersionAzureDiskEncryption')]",
                        "autoUpgradeMinorVersion": true,
                        "forceUpdateTag": "[parameters('forceUpdateTag')]",
                        "settings": {
                        "EncryptionOperation": "[variables('encryptionOperation')]",
                        "KeyVaultURL": "[reference(concat(variables('subscriptionID'), '/resourceGroups/', parameters('keyVaultResourceGroup'), '/providers/Microsoft.KeyVault/vaults/', parameters('keyVaultName')),'2016-10-01').vaultUri]",
                        "KeyVaultResourceId": "[concat(variables('subscriptionID'), '/resourceGroups/', parameters('keyVaultResourceGroup'), '/providers/Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]",
                        "KeyEncryptionKeyURL": "[parameters('keyEncryptionKeyURL')]",
                        "KekVaultResourceId": "[concat(variables('subscriptionID'), '/resourceGroups/', parameters('keyVaultResourceGroup'), '/providers/Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]",
                        "KeyEncryptionAlgorithm": "[variables('keyEncryptionAlgorithm')]",
                        "VolumeType": "[parameters('volumeType')]",
                        "ResizeOSDisk": "[parameters('resizeOSDisk')]"
                        }
                    }
                }
            ]
        }
    ],
    "functions": [
        {
            "namespace": "vdc",
            "members": {
                "nextIP": {
                    "parameters": [
                        {
                            "name": "ip",
                            "type": "string"
                        },
                        {
                            "name": "operand",
                            "type": "int"
                        }
                    ],
                    "output": {
                        "type": "string",
                        "value": "[concat(split(parameters('ip'), '.')[0], '.' ,split(parameters('ip'), '.')[1], '.' ,split(parameters('ip'), '.')[2], '.', add(int(split(parameters('ip'), '.')[3]), parameters('operand')))]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "vmResourceGroup": {
            "type": "string",
            "value": "[resourceGroup().name]",
            "metadata": {
                "description": "The Resource Group that was deployed to."
            }
        },
        "vmNames": {
            "type": "array",
            "value": "[variables('vmNames').vmNames]",
            "metadata": {
                "description": "The name of the VMs provisioned."
            }
        },
        "vmResourceIds": {
            "type": "array",
            "value": "[variables('vmResourceIds').vmResourceIds]",
            "metadata": {
                "description": "The resource identifier of the VMs provisioned."
            }
        }
    }
}
